/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (0 0 0)//#0, 
    (200 0 0)//#1, 
    (400 0 0)//#2, 
    (0 50 0)//#3, 
    (200 50 0)//#4, 
    (400 50 0)//#5, 
    (0 100 0)//#6, 
    (200 100 0)//#7, 
    (400 100 0)//#8, 
    (0 0 1)//#9, 
    (200 0 1)//#10, 
    (400 0 1)//#11, 
    (0 50 1)//#12, 
    (200 50 1)//#13, 
    (400 50 1)//#14, 
    (0 100 1)//#15, 
    (200 100 1)//#16, 
    (400 100 1)//#17,
);






blocks
(
    //hex (0 1 4 3 9 10 13 12) block0 (2 20 1) simpleGrading (1 0.05 1)
    //hex (1 2 5 4 10 11 14 13) block1 (8 20 1) simpleGrading (1 0.05 1)
    //hex (3 4 7 6 12 13 16 15) block2 (2 62 1) simpleGrading (1 ((0.9 0.982071 10)(0.1 0.016129 1)) 1)
    //hex (4 5 8 7 13 14 17 16) block3 (8 62 1) simpleGrading (1 ((0.9 0.982071 10)(0.1 0.016129 1)) 1)

    //hex (0 1 4 3 9 10 13 12) block0 (2 20 1) simpleGrading (1 0.05 1)
    //hex (1 2 5 4 10 11 14 13) block1 (8 20 1) simpleGrading (1 0.05 1)
    //hex (3 4 7 6 12 13 16 15) block2 (2 62 1) simpleGrading (1 10 1)
    //hex (4 5 8 7 13 14 17 16) block3 (8 62 1) simpleGrading (1 10 1)

    hex (0 1 4 3 9 10 13 12) block0 (10 60 1) simpleGrading (1 1 1)
    hex (1 2 5 4 10 11 14 13) block1 (10 60 1) simpleGrading (1 1 1)
    hex (3 4 7 6 12 13 16 15) block2 (10 60 1) simpleGrading (1 1 1)
    hex (4 5 8 7 13 14 17 16) block3 (10 60 1) simpleGrading (1 1 1)


);

edges
(
);

boundary
(

    topWall
    {
        type wall;
        faces
        (
            (6 7 16 15)
            (7 8 17 16)
        );
    }

    botWall
    {
        type wall;
        faces
        (
            (0 1 10 9)
            (1 2 11 10)
        );
    }

    inlet
    {
        type cyclic;
        neighbourPatch  outlet;
        faces
        (
            (0 3 12 9)
            (3 6 15 12)
        );
    }
    
    outlet
    {
        type cyclic;
        neighbourPatch  inlet;
        faces
        (
            (2 5 14 11)
            (5 8 17 14)
        );
    }


    fixWall
    {
        type empty;
        faces
        (
            (0 1 4 3)
            (1 2 5 4)
            (3 4 7 6)
            (4 5 8 7)
            (9 12 13 10)
            (10 14 13 11)
            (12 16 15 13)
            (13 16 17 14)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
